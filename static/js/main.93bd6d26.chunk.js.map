{"version":3,"sources":["components/voice_interface/media/failure.mp3","components/voice_interface/media/success.wav","logo.svg","components/voice_interface/media sync /^/.*$","components/voice_interface/media/donation_request.wav","components/voice_interface/media/ear.png","components/voice_interface/media/mic.svg","components/donate/media/finally.wav","redux/actions/game/try_move.js","redux/actions/game/clear_pending_move.js","redux/actions/game/set_position.js","redux/actions/game/set_player_side.js","redux/reducers/game_reducer.js","redux/actions/general/send_command.js","redux/actions/general/clear_command.js","redux/reducers/general_reducer.js","redux/actions/voice_interface/add_pending_sentence.js","redux/actions/voice_interface/clear_pending_sentences.js","redux/reducers/voice_interface_reducer.js","redux/actions/voice_interface/remove_pending_sentence.js","redux/store.js","components/game_handler/gameHandler.js","components/voice_interface/moveToTextConverter.js","components/game_handler/gameHandlerComponent.js","components/voice_interface/speaker.js","components/voice_interface/voiceCommandsListener.js","components/voice_interface/UICommandsInterpreter.js","components/voice_interface/moveInterpreter.js","components/voice_interface/commandsHandler.js","webpack:///./src/components/voice_interface/media/mic.svg?6396","components/voice_interface/voiceInterface.js","components/donate/media/heart.svg","components/donate/donate.js","components/navbar/navbar.js","components/error_catcher/ErrorCatcher.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","action","move","type","payload","fen_position","player_side","default_state","pending_move","reducer","state","assign","position","command","pending_command","commands_history","sentence","pending_sentences","console","log","new_pending_sentences","includes","push","sentence_id","slice","main_reducer","combineReducers","game","game_reducer","general","general_reducer","voice_interface","voice_interface_reducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","GameHandler","this","Chess","last_move","player_types","STOCKFISH","engine","Worker","engine_ready","depth","onmessage","on_engine_message","bind","move_string","p","reset","fen","load","s","turn","side","b","w","check_computer_response","setTimeout","send_engine_message","start_engine","messge","postMessage","event","message","data","trim","split","match","move_success","from","to","promotion","history","undo","try_move","on_opponent_move","position_message","go_message","toString","in_draw","on_draw","insufficient_material","on_insufficient_material","in_threefold_repetition","on_repetition","in_stalemate","on_stalemate","in_check","on_check","in_checkmate","on_checkmate","on_win","request_engine_move","tb1","tb2","length","moves","pop","on_illegal_move","on_success_move","check_position_events","MoveToTextConverter","get_first_square","move_str","returned","remove_special_chars","remove_pieces","replace","forEach","char","join","final_str","check_str","final_str_promotion","substr","get_piece","GameHandlerComponent","props","game_handler","move_converter","c1","c2","set_position","piece","first_square","destination","get_destination","takes","get_takes","his","add_voice_sentence","get_side_to_move","prevProps","prevState","load_position","new_game","set_player_side","execute_command","take_back","com","difficulty","parseInt","set_depth","clear_pending_command","refs","board","style","display","repeat","game_help","pos","board_orientation","ref","className","width","orientation","boardStyle","borderRadius","boxShadow","Component","connect","dispatch","clear_pending_move","add_pending_sentence","Speaker","is_ispeaking","speechSynthesis","onvoiceschanged","voice","get_voice","lang","voices","getVoices","available_voices","i","text","Promise","reject","is_audio_file","sound_file","require","html_audio","document","createElement","src","onended","speak_ended","play","speak_started","msg","SpeechSynthesisUtterance","volume","rate","pitch","onend","speak","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","VoiceCommandsListener","recently_received_command","interpreters_list","recognition","speechRecognitionList","addFromString","grammars","continuous","interimResults","maxAlternatives","last_command","command_found","current_command","candidate_word","current_confidence","is_listening","onresult","process_result","onspeechend","on_end","onstart","on_start","onnomatch","start","onerror","result","interpreter","stop","error","evt","preventDefault","results_object","results","alternatives","Array","recognized_uninterpreted","transcript","on_result","j","interpreted_result","interpret","delay_same_command","on_received_command","read_success","read_failure","on_read_success","on_read_failure","word_candidates_object","transform_words_object","UICommandsInterpreter","allowed_commands","str_val","arr","word","toLowerCase","get_rid_of_signs","replace_words","remove_remaining","transform_words","signs","sign","search","replace_val","alias_regexp","RegExp","new_str","dict","key","alias","replace_all","allowed_words","final_words_arr","coord_letters","coord_numbers","allowed_squares","letter","number","number_candidates_object","letter_candidates_object","go_candidates_object","final_replacements_object","homophones","MoveInterpreter","cached_piece","cached_first_square","cached_destination","cached_takes","cached_castle","timeout_id","second_square_allowed","accepted_move","can_clean_cache","possible_squares","str","castle_str","piece_str","takes_str","on_recognition_change","clearTimeout","clean_move_cache","allowed_pieces","piece_letters","allowed_squares_for_recognition","square","state_before","get_recognition_state","recognize_castle","recognize_piece","recognize_squares","recognize_takes","recognition_change","options","options_found","homophones_list","k","replacement_candidate","move_option","get_homophone_options","option","is_legal_move","two_letter_squares","filter","preliminar_option","create_move","final_option","get_legal_homophone","only_letter_squares","source_square","replace_go","detect_go","separate_numbers","replace_numbers","replace_letters","replace_general","remove_spaces","recognize_features","start_cleaning_timeout_counter","get_legal_move","is_coordinate","CommandsHandler","returned_arr","on_move_save","is_move_ready","on_move","on_rejected_move","is_move","save_pending_move","get_move","on_not_recognized_command","on_command_failure","on_command_success","_extends","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","height","_ref3","d","_ref","svgRef","title","enableBackground","viewBox","ForwardRef","forwardRef","failure_sound","success_sound","VoiceInterface","wait_before_moving_again","can_speak","can_listen","coord_listener","voiceCommandsListener","move_interpreter","ui_interpreter","add_interpreter","commands_handler","speaker","command_success","command_failure","mic_icon","classList","add","remove","on_speak_start","stop_listening","on_speak_end","listen","font_replacements","K","N","B","R","Q","innerHTML","your","add_sentence","getElementById","send_command","body","onclick","addEventListener","ev","stopPropagation","Swal","fire","getElementsByClassName","chess_instance","replace_game_handler","speak_pending_sentences","check_pending_sentences","set_game_position","clear_sentences","sentences_spoken","finally_audio_url","Donate","Audio","show","value","paypal","Buttons","createOrder","actions","order","create","purchase_units","amount","application_context","onApprove","capture","then","details","render","me","mixin","customClass","confirmButton","cancelButton","buttonsStyling","html","confirmButtonText","render_paypal_button","querySelector","radios","getElementsByName","checked","disabled","clickHandler","NavBar","$","ready","click","clickover","_opened","hasClass","removeClass","href","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","add_maps","ErrorCatcher","hasError","info","setState","padding","class","role","children","App","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","URL","process","origin","fetch","headers","response","contentType","get","status","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.93bd6d26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/failure.5acd1a08.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.e0d006dd.wav\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./donation_request.wav\": 41,\n\t\"./ear.png\": 42,\n\t\"./failure.mp3\": 19,\n\t\"./mic.svg\": 43,\n\t\"./success.wav\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40;","module.exports = __webpack_public_path__ + \"static/media/donation_request.a661a105.wav\";","module.exports = __webpack_public_path__ + \"static/media/ear.20e2bf1a.png\";","module.exports = __webpack_public_path__ + \"static/media/mic.90f18d92.svg\";","module.exports = __webpack_public_path__ + \"static/media/finally.5f759873.wav\";","export const TRY_MOVE_TYPE = 'TRY_MOVE';\r\n\r\nconst action = (move) => {\r\n    \r\n    const type = TRY_MOVE_TYPE;\r\n    const payload = move;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action;","export const CLEAR_MOVE_TYPE = 'CLEAR_MOVE';\r\n\r\nconst action = () => {\r\n    \r\n    const type = CLEAR_MOVE_TYPE;\r\n    return {\r\n        type,\r\n        payload:\"\"\r\n    }\r\n}\r\n\r\nexport default action;","export const SET_POSITION_TYPE = 'SET_POSITION';\r\n\r\nconst action = (fen_position) => {\r\n    \r\n    const type = SET_POSITION_TYPE;\r\n    const payload = fen_position;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action;","export const SET_PLAYER_SIDE_TYPE = 'SET_PLAYER_SIDE';\r\n\r\nconst action = (player_side) => {\r\n    \r\n    const type = SET_PLAYER_SIDE_TYPE;\r\n    const payload = player_side;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action;","\r\nimport { TRY_MOVE_TYPE } from '../actions/game/try_move'\r\nimport { CLEAR_MOVE_TYPE } from '../actions/game/clear_pending_move'\r\nimport { SET_POSITION_TYPE } from '../actions/game/set_position'\r\nimport { SET_PLAYER_SIDE_TYPE } from '../actions/game/set_player_side'\r\n\r\nconst default_state = {\r\n    pending_move: null,\r\n    fen_position:null,\r\n    player_side: null,\r\n}\r\n\r\nfunction reducer(state = default_state, action) {\r\n\r\n\r\n    switch (action.type) {\r\n        case TRY_MOVE_TYPE:\r\n            let pending_move = action.payload;\r\n            return Object.assign({}, state, {\r\n                pending_move,\r\n            })\r\n        case SET_PLAYER_SIDE_TYPE:\r\n            let player_side = action.payload;\r\n            return Object.assign({}, state, {\r\n                player_side,\r\n            })\r\n        case CLEAR_MOVE_TYPE:\r\n            return Object.assign({}, state, {\r\n                pending_move: null,\r\n            })\r\n        case SET_POSITION_TYPE:\r\n            let position = action.payload;\r\n            return Object.assign({}, state, {\r\n                fen_position: position,\r\n                pending_move: null,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","export const SEND_COMMAND_TYPE = 'SEND_COMMAND';\r\n\r\nconst action = (command) => {\r\n    const type = SEND_COMMAND_TYPE;\r\n    const payload = command;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action; ","export const CLEAR_COMMAND_TYPE = 'CLEAR_COMMAND';\r\n\r\nconst action = () => {\r\n    const type = CLEAR_COMMAND_TYPE;\r\n    // const payload = command;\r\n    return {\r\n        type,\r\n        // payload\r\n    }\r\n}\r\n\r\nexport default action; ","\r\nimport { SEND_COMMAND_TYPE } from '../actions/general/send_command';\r\nimport { CLEAR_COMMAND_TYPE } from '../actions/general/clear_command';\r\n\r\nconst default_state = {\r\n    pending_command: null,\r\n    commands_history:[]\r\n}\r\n\r\nfunction reducer(state = default_state, action) {\r\n\r\n\r\n    switch (action.type) {\r\n        case SEND_COMMAND_TYPE:\r\n            let pending_command = action.payload;\r\n            return Object.assign({}, state, {\r\n                pending_command: pending_command,\r\n                commands_history: [...state.commands_history,pending_command],\r\n            })\r\n        case CLEAR_COMMAND_TYPE:\r\n            return Object.assign({}, state, {\r\n                pending_command: null,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","export const ADD_PENDING_SENTENCE_TYPE = 'ADD_PENDING_SENTENCE';\r\n\r\nconst action = (sentence) => {\r\n    \r\n    const type = ADD_PENDING_SENTENCE_TYPE;\r\n    const payload = sentence;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action; ","export const CLEAR_PENDING_SENTENCES_TYPE = 'CLEAR_PENDING_SENTENCES';\r\n\r\nconst action = () => {\r\n    \r\n    const type = CLEAR_PENDING_SENTENCES_TYPE;\r\n    const payload = null;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action; ","import { ADD_PENDING_SENTENCE_TYPE } from '../actions/voice_interface/add_pending_sentence';\r\nimport { REMOVE_PENDING_SENTENCE_TYPE } from '../actions/voice_interface/remove_pending_sentence';\r\nimport { CLEAR_PENDING_SENTENCES_TYPE } from '../actions/voice_interface/clear_pending_sentences';\r\n\r\nconst default_state = {\r\n    pending_sentences: [],\r\n}\r\n\r\nfunction reducer(state = default_state, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_PENDING_SENTENCE_TYPE:\r\n            let sentence = action.payload;\r\n            console.log('adding pending sentence: ',sentence);\r\n            console.log('sentences before adding: ',state.pending_sentences);\r\n            var new_pending_sentences = [...state.pending_sentences];\r\n            if(!new_pending_sentences.includes(sentence)){\r\n                new_pending_sentences.push(sentence);\r\n            }\r\n            return Object.assign({}, state, {\r\n                pending_sentences: new_pending_sentences,\r\n            })\r\n        case REMOVE_PENDING_SENTENCE_TYPE:\r\n            let sentence_id = action.payload;\r\n            return Object.assign({}, state, {\r\n                pending_sentences: state.pending_sentences.slice(sentence_id,1),\r\n            })\r\n        case CLEAR_PENDING_SENTENCES_TYPE:\r\n            return Object.assign({}, state, {\r\n                pending_sentences: [],\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","export const REMOVE_PENDING_SENTENCE_TYPE = 'REMOVE_PENDING_SENTENCE';\r\n\r\nconst action = (sentence_id) => {\r\n    \r\n    const type = REMOVE_PENDING_SENTENCE_TYPE;\r\n    const payload = sentence_id;\r\n    return {\r\n        type,\r\n        payload\r\n    }\r\n}\r\n\r\nexport default action; ","import { createStore, combineReducers } from 'redux';\r\nimport game_reducer from './reducers/game_reducer';\r\nimport general_reducer from './reducers/general_reducer';\r\nimport voice_interface_reducer from './reducers/voice_interface_reducer';\r\nvar main_reducer = combineReducers({\r\n    game: game_reducer,\r\n    general: general_reducer,\r\n    voice_interface: voice_interface_reducer,\r\n});\r\n\r\nvar store = createStore(\r\n    main_reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nexport default store;","import Chess from \"chess.js\";\r\n\r\nclass GameHandler {\r\n\r\n    constructor() {\r\n        this.game = new Chess();\r\n        this.last_move = null;\r\n        this.player_types = {\r\n            'w': 'human',\r\n            'b': 'computer'\r\n        };\r\n        const STOCKFISH = window.STOCKFISH;\r\n        this.engine =\r\n            typeof STOCKFISH === \"function\"\r\n                ? STOCKFISH()\r\n                : new Worker(\"stockfish.js\");\r\n        this.engine_ready = false;\r\n        this.depth = 2;\r\n        this.engine.onmessage = this.on_engine_message.bind(this);\r\n    }\r\n\r\n    on_success_move(move_string) { }\r\n    on_check(p) { }\r\n    on_checkmate(p) { }\r\n    on_win(p) { }\r\n    on_draw() { }\r\n    on_stalemate() { }\r\n    on_insufficient_material() { }\r\n    on_repetition() { }\r\n    on_illegal_move(move_string) { }\r\n    on_opponent_move(move_string) { }\r\n\r\n    set_depth(depth) {\r\n        this.depth = depth;\r\n    }\r\n\r\n    new_game() {\r\n        this.game.reset();\r\n    }\r\n\r\n    load_position(fen_position) {\r\n        if (this.game.fen() !== fen_position) {\r\n            console.log('different fen position loaded');\r\n            this.game.load(fen_position);\r\n        }\r\n    }\r\n\r\n    get_side_to_move() {\r\n        let s = this.game.turn();\r\n        if (s === 'w') return 'white';\r\n        if (s === 'b') return 'black';\r\n    }\r\n\r\n    set_player_side(side) {\r\n        if (side === 'black') {\r\n            this.player_types.b = 'human';\r\n            this.player_types.w = 'computer';\r\n        } else if (side === 'black') {\r\n            this.player_types.b = 'computer';\r\n            this.player_types.w = 'human';\r\n        }\r\n        this.check_computer_response();\r\n    }\r\n\r\n    start_engine() {\r\n        console.log('starting engine');\r\n        if (!this.engine_ready) {\r\n            setTimeout(function () {\r\n                this.send_engine_message('uci');\r\n                this.setTimeout(function () {\r\n                    this.start_engine();\r\n                }.bind(this), 100)\r\n            }.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    send_engine_message(messge) {\r\n        this.engine.postMessage(messge);\r\n    }\r\n\r\n    on_engine_message(event) {\r\n        let message;\r\n\r\n        if (event && typeof event === \"object\") {\r\n            message = event.data.trim();\r\n        } else {\r\n            message = event.trim();\r\n        }\r\n        console.log('gamehandler engine: ' + message);\r\n        if (message === 'uciok') {\r\n            this.engine_ready = true;\r\n        }\r\n        if (message.split(\" \")[0] === 'bestmove') {\r\n            let match = message.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\r\n            if (match) {\r\n                // isEngineRunning = false;\r\n                let move_success = this.game.move({ from: match[1], to: match[2], promotion: match[3] });\r\n                let last_move = this.game.history().slice(-1)[0];\r\n\r\n                if (move_success) {\r\n                    this.game.undo();\r\n                    console.log('undo correct');\r\n                }\r\n                console.log({ last_move });\r\n                move_success = this.try_move(last_move);\r\n                if (move_success) {\r\n                    this.on_opponent_move(last_move);\r\n                } else {\r\n                    console.log('gameHandler.try_move was unsuccessful for move:', last_move);\r\n                    console.log('game moves:', this.game.history());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    request_engine_move() {\r\n        const position_message = 'position fen ' + this.game.fen();\r\n        const go_message = 'go  wtime 3000 winc 1500 btime 3000 binc 1500 depth ' + this.depth.toString();\r\n        this.send_engine_message(position_message);\r\n        this.send_engine_message(go_message);\r\n    }\r\n\r\n    check_position_events() {\r\n        if (this.game.in_draw())\r\n            this.on_draw();\r\n        if (this.game.insufficient_material())\r\n            this.on_insufficient_material();\r\n        if (this.game.in_threefold_repetition())\r\n            this.on_repetition();\r\n        if (this.game.in_stalemate())\r\n            this.on_stalemate();\r\n        if (this.game.in_check())\r\n            this.on_check(this.game.turn());\r\n        if (this.game.in_checkmate())\r\n            this.on_checkmate(this.game.turn());\r\n        this.on_win(this.game.turn());\r\n    }\r\n\r\n    check_computer_response() {\r\n        if (this.player_types[this.game.turn()] === 'computer') {\r\n            this.request_engine_move();\r\n        }\r\n    }\r\n\r\n    take_back() {\r\n        if (this.player_types[this.game.turn()] !== 'computer') {\r\n            let tb1 = this.game.undo();\r\n            let tb2 = this.game.undo();\r\n            if (tb1 === null || tb2 == null) {\r\n                console.log('take back error (', tb1, ',', tb2, ')');\r\n            } else {\r\n                console.log('taken back to: ', this.game.fen());\r\n                if (this.game.history().length > 1) {\r\n                    console.log({moves:this.game.history()});\r\n                    \r\n                    this.last_move = this.game.history().slice(-1).pop();\r\n                } else {\r\n                    this.last_move = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    try_move(move_string) {\r\n        console.log('gameHandler: ', move_string);\r\n\r\n        let move = this.game.move(move_string);\r\n\r\n        if (move === null) {\r\n            console.log(move_string + ' is illegal');\r\n            this.on_illegal_move(move_string);\r\n            return false;\r\n        }\r\n        this.last_move = move_string;\r\n        this.on_success_move(move_string);\r\n        this.check_position_events();\r\n        this.check_computer_response();\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default GameHandler;","class MoveToTextConverter {\r\n\r\n    constructor(){\r\n        console.log('first sqare for exd5:',this.get_first_square('exd5') );\r\n        \r\n        \r\n    }\r\n\r\n\r\n    get_first_square(move_str){\r\n        let returned = move_str;\r\n        returned = this.remove_special_chars(returned);\r\n        returned = this.remove_pieces(returned);\r\n        returned = returned.replace('x','');\r\n        returned = returned.slice(0,-2);\r\n        return returned;\r\n    }\r\n    \r\n    get_piece(move_str){\r\n        let returned = \"\";\r\n        if(move_str.includes('Q')){\r\n            returned = 'queen';\r\n        }\r\n        \r\n        else if(move_str.includes('R')){\r\n            returned = 'rook';\r\n        }\r\n        else if(move_str.includes('B')){\r\n            returned = 'bishop';\r\n        }\r\n        else if(move_str.includes('N')){\r\n            returned = 'knight';\r\n        }\r\n        else if(move_str.includes('K')){\r\n            returned = 'king';\r\n        }\r\n        else if(move_str.includes('O-O') || move_str.includes('O-O-O')){\r\n            returned = 'king';\r\n        }\r\n        else {\r\n            returned = 'pawn';\r\n        }\r\n        \r\n        return returned;\r\n    }\r\n\r\n    remove_special_chars(move_str){\r\n        let returned = move_str;\r\n        let special_chars=['+','-',',','.','*','#','=']\r\n        special_chars.forEach(char => {\r\n            returned = returned.split(char).join(\"\");\r\n        });\r\n        return returned;\r\n    }\r\n    remove_pieces(move_str){\r\n        let returned = move_str;\r\n        let special_chars=['Q','B','R','K','N'];\r\n        special_chars.forEach(char => {\r\n            returned = returned.split(char).join(\"\");\r\n        });\r\n        return returned;\r\n    }\r\n\r\n    get_takes(move_str){\r\n        if(move_str.includes('x')){\r\n            return 'takes';\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    get_destination(move_str){\r\n        let final_str = move_str;\r\n        let check_str = '';\r\n        if(move_str.includes('O-O-O')){\r\n            return 'castle queen side';\r\n        }\r\n        if(move_str.includes('O-O')){\r\n            return 'castle king side';\r\n        }\r\n        if(move_str.includes('+')){\r\n            final_str = final_str.split(\"+\").join(\"\");\r\n            check_str = ', check';\r\n        }else if(move_str.includes('#')){\r\n            final_str = final_str.split(\"#\").join(\"\");\r\n            check_str = ', checkmate'\r\n        }\r\n\r\n        let final_str_promotion = final_str.split(\"=\");\r\n        if(final_str_promotion.length>1){\r\n            final_str = final_str_promotion[0].substr(-2);\r\n            final_str += ' promotion to '+this.get_piece(final_str_promotion[1]);\r\n        }else{\r\n            final_str = final_str.substr(-2);\r\n        }\r\n        \r\n        return final_str+check_str; \r\n\r\n    }\r\n}\r\n \r\nexport default MoveToTextConverter;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GameHandler from './gameHandler';\r\nimport try_move from '../../redux/actions/game/try_move';\r\nimport clear_pending_move from '../../redux/actions/game/clear_pending_move';\r\nimport clear_pending_command from '../../redux/actions/general/clear_command';\r\nimport set_position from '../../redux/actions/game/set_position';\r\nimport set_player_side from '../../redux/actions/game/set_player_side';\r\nimport add_pending_sentence from '../../redux/actions/voice_interface/add_pending_sentence';\r\nimport MoveToTextConverter from '../voice_interface/moveToTextConverter';\r\nimport Chessboard from \"chessboardjsx\";\r\nimport './style.css';\r\n\r\nclass GameHandlerComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.game_handler = new GameHandler();\r\n        this.move_converter = new MoveToTextConverter();\r\n        this.game_handler.on_success_move = (c1, c2) => {\r\n            this.props.set_position(this.game_handler.game.fen());\r\n        }\r\n        this.game_handler.on_illegal_move = (move_string) => {\r\n            console.log('move ' + move_string + ' is illegal');\r\n        }\r\n        this.game_handler.on_checkmate = this.on_checkmate.bind(this);\r\n        this.game_handler.on_repetition = this.on_repetition.bind(this);\r\n        this.game_handler.on_insufficient_material = this.on_insufficient_material.bind(this);\r\n        this.game_handler.on_opponent_move = (move_str) => {\r\n            const piece = this.move_converter.get_piece(move_str);\r\n            const first_square = this.move_converter.get_first_square(move_str);\r\n            const destination = this.move_converter.get_destination(move_str);\r\n            const takes = this.move_converter.get_takes(move_str);\r\n            const his = takes !== \"\" ? \"\" : \" his \";\r\n            const to = takes !== \"\" ? \" takes \" : \" to \";\r\n            this.props.add_voice_sentence('your opponent has moved ' +\r\n                his +\r\n                piece +\r\n                first_square +\r\n                to +\r\n                destination);\r\n        }\r\n    }\r\n\r\n    on_checkmate(turn) {\r\n        if (turn == \"w\") {\r\n            this.props.add_voice_sentence(\"chekmate, black wins\");\r\n        } else {\r\n            this.props.add_voice_sentence(\"chekmate, white wins\");\r\n        }\r\n    }\r\n\r\n    on_repetition() {\r\n        this.props.add_voice_sentence(\"Draw by threefold repetition\");\r\n    }\r\n    on_insufficient_material() {\r\n        this.props.add_voice_sentence(\"Draw by insufficient material\");\r\n    }\r\n\r\n    repeat() {\r\n        let move = this.game_handler.last_move;\r\n        console.log('repeating',move);\r\n        \r\n        if (move) {\r\n            const piece = this.move_converter.get_piece(move);\r\n            const first_square = this.move_converter.get_first_square(move);\r\n            const destination = this.move_converter.get_destination(move);\r\n            const takes = this.move_converter.get_takes(move);\r\n            this.props.add_voice_sentence(\r\n                piece + ' ' +\r\n                first_square + ' ' +\r\n                takes + ' ' +\r\n                destination +\r\n                '. ' +\r\n                this.game_handler.get_side_to_move() +\r\n                ' to move'\r\n            );\r\n        } else if (!this.props.player_side) {\r\n            this.props.add_voice_sentence('Do you want to play white? or black');\r\n        } else {\r\n            this.props.add_voice_sentence('starting position. white to move');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"handler mounted\");\r\n        setTimeout(() => {\r\n            // this.props.add_voice_sentence('donation_request.wav');\r\n            this.props.add_voice_sentence('Do you want to play white? or black');\r\n        }, 3000);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(\"handler updated\");\r\n        if (!this.props.fen_position) {\r\n            this.game_handler.new_game();\r\n        }\r\n        else {\r\n            //this breaks the uci commands, better not implement this way\r\n            this.game_handler.load_position(this.props.fen_position);\r\n        }\r\n        if (this.props.player_side) {\r\n            this.game_handler.set_player_side(this.props.player_side);\r\n        }\r\n        let pending_move = this.props.pending_move;\r\n        if (pending_move != null) {\r\n            console.log(pending_move);\r\n            this.game_handler.try_move(pending_move);\r\n        } else {\r\n            this.props.set_position(this.game_handler.game.fen())\r\n        }\r\n        if (this.props.pending_command) {\r\n            this.execute_command(this.props.pending_command);\r\n        }\r\n    }\r\n\r\n    set_player_side(side) {\r\n        this.props.set_player_side(side);\r\n        if (side == 'white') {\r\n            this.props.add_voice_sentence('You play white.');\r\n        }\r\n    }\r\n\r\n    take_back(){\r\n        this.game_handler.take_back();\r\n        this.props.set_position(this.game_handler.game.fen());\r\n    }\r\n\r\n    game_help() {\r\n        this.props.add_voice_sentence(`\r\n        The game uses standard algebraic notation, for instance e4, Knight f6, d takes e5, Knight takes e4 or castle kingside\r\n        `);\r\n        this.props.add_voice_sentence(`\r\n        You can say show board to show the game position at any moment for five seconds\r\n        `);\r\n        this.props.add_voice_sentence(`\r\n        say repeat to hear the last move\r\n        `);\r\n        this.props.add_voice_sentence(`\r\n        Say new game when you want to start a new game\r\n        `);\r\n    }\r\n\r\n    execute_command(command) {\r\n        let com = command;\r\n        if (com.includes('difficulty')) {\r\n            let difficulty = parseInt(com.split(\" \")[1]);\r\n            this.game_handler.set_depth(difficulty);\r\n            this.props.add_voice_sentence('difficulty changed to ' + difficulty.toString());\r\n            this.props.clear_pending_command();\r\n        } else if (com === 'show board') {\r\n            if (this.refs.board.style.display == 'none')\r\n                this.refs.board.style.display = 'flex';\r\n            else\r\n                this.refs.board.style.display = 'none';\r\n            this.props.clear_pending_command();\r\n        } else if (com === 'new game') {\r\n            this.props.set_position(null);\r\n            this.props.clear_pending_command();\r\n        } else if (com === 'white' || com === 'black') {\r\n            this.props.clear_pending_command();\r\n            if (!this.props.player_side) {\r\n                this.set_player_side(com);\r\n            }\r\n        } else if (com === 'repeat') {\r\n            this.repeat();\r\n            this.props.clear_pending_command();\r\n        } else if (com === 'help') {\r\n            this.game_help();\r\n            this.props.clear_pending_command();\r\n        } else if (com === 'back') {\r\n            this.take_back();\r\n            this.props.clear_pending_command();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let pos = this.props.fen_position;\r\n        if (this.props.fen_position == null) {\r\n            pos = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\r\n        }\r\n        let board_orientation = this.props.player_side ? this.props.player_side : \"white\";\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div ref=\"board\" className=\"board\"\r\n                // style={{ display: 'none' }}\r\n                >\r\n\r\n                    <Chessboard\r\n                        id=\"humanVsHuman\"\r\n                        width={320}\r\n                        position={pos}\r\n                        orientation={board_orientation}\r\n                        boardStyle={{\r\n                            borderRadius: \"5px\",\r\n                            boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\r\n                        }}\r\n                    // onDrop={this.onDrop.bind(this)}\r\n                    // onMouseOverSquare={onMouseOverSquare}\r\n                    // onMouseOutSquare={onMouseOutSquare}\r\n                    // squareStyles={squareStyles}\r\n                    // dropSquareStyle={dropSquareStyle}\r\n                    // onDragOverSquare={onDragOverSquare}\r\n                    // onSquareRightClick={onSquareRightClick}\r\n                    // onSquareClick={this.onSquareClick.bind(this)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pending_move: state.game.pending_move,\r\n        pending_command: state.general.pending_command,\r\n        fen_position: state.game.fen_position,\r\n        player_side: state.game.player_side,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        set_position: (fen_position) => {\r\n            dispatch(set_position(fen_position));\r\n        },\r\n        set_player_side: (player_side) => {\r\n            dispatch(set_player_side(player_side));\r\n        },\r\n        clear_pending_move: () => {\r\n            dispatch(clear_pending_move());\r\n        },\r\n        clear_pending_command: () => {\r\n            dispatch(clear_pending_command());\r\n        },\r\n        try_move: (move_str) => {\r\n            dispatch(try_move(move_str));\r\n        },\r\n        add_voice_sentence: (sentence) => {\r\n            dispatch(add_pending_sentence(sentence));\r\n        },\r\n    });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameHandlerComponent);\r\n\r\n","\r\nclass Speaker {\r\n\r\n  constructor() {\r\n    this.is_ispeaking = false;\r\n    window.speechSynthesis.onvoiceschanged = function (e) {\r\n      this.voice = this.get_voice();\r\n      // console.log(this.voice);\r\n    }.bind(this);\r\n  }\r\n\r\n  get_voice(lang) {\r\n    // Fetch the available voices.\r\n    var voices = speechSynthesis.getVoices();\r\n    var available_voices = [];\r\n    // console.log('voices:', voices);\r\n    for (let i = 0; i < voices.length; i++) {\r\n\r\n      const voice = voices[i];\r\n      // console.log('checking lang:', voice.lang);\r\n      if (voice.lang === 'en-US') {\r\n        available_voices.push(voice)\r\n      }\r\n    }\r\n    // alert(available_voices.map(emt=>(emt.name)));\r\n    return available_voices[1];\r\n  }\r\n\r\n  on_speak_start() { }\r\n  on_speak_end() { }\r\n\r\n  speak_started() {\r\n    console.log('speak started');\r\n    this.is_ispeaking = true;\r\n    // this.on_speak_start();\r\n  }\r\n\r\n  speak_ended() {\r\n    setTimeout(() => {\r\n      console.log('speak ended');\r\n      this.is_ispeaking = false;\r\n      // this.on_speak_end();\r\n    }, 600);\r\n  }\r\n\r\n  // speak(text) {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     console.log('test speaking');\r\n  //     this.speak_ended();\r\n  //     resolve();\r\n  //   });\r\n  // }\r\n\r\n  is_audio_file(sentence) {\r\n    if (sentence.includes('.mp3'))\r\n      return true;\r\n    if (sentence.includes('.wav'))\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  speak(text) {\r\n    // Create a new instance of SpeechSynthesisUtterance.\r\n    console.log('speaking:', text);\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      if (this.is_audio_file(text)) {\r\n        const sound_file = require('./media/'+text);\r\n        let html_audio = document.createElement('audio');\r\n        html_audio.src = sound_file;\r\n        html_audio.onended = function(){\r\n          this.speak_ended();\r\n          resolve();\r\n        }.bind(this);\r\n        html_audio.play();\r\n        this.speak_started();\r\n      } else {\r\n\r\n        var msg = new SpeechSynthesisUtterance();\r\n\r\n        // Set the text.\r\n        msg.text = text;\r\n\r\n        // Set the attributes.\r\n        msg.volume = 1;\r\n        msg.rate = 1;\r\n        msg.pitch = 1;\r\n\r\n        // If a voice has been selected, find the voice and set the\r\n        // utterance instance's voice attribute.\r\n\r\n        msg.voice = this.voice;\r\n        msg.onend = (() => {\r\n          this.speak_ended();\r\n          resolve();\r\n        }).bind(this);\r\n\r\n        // Queue this utterance.\r\n        window.speechSynthesis.speak(msg);\r\n        this.speak_started();\r\n        console.log('waiting for speaking to end');\r\n        // this.wait_until_stop();\r\n      }\r\n\r\n    });\r\n  }\r\n}\r\n\r\nexport default Speaker;\r\n\r\n\r\n\r\n\r\n","// var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition\r\n// var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList\r\n// var SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent\r\n\r\nvar SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nvar SpeechGrammarList = window.SpeechGrammarList || window.webkitSpeechGrammarList;\r\n// var SpeechRecognitionEvent = window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent\r\n\r\n// var colors = [ 'aqua' , 'azure' , 'beige', 'bisque', 'black', 'blue', 'brown', 'chocolate', 'coral', 'crimson', 'cyan', 'fuchsia', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green', 'indigo', 'ivory', 'khaki', 'lavender', 'lime', 'linen', 'magenta', 'maroon', 'moccasin', 'navy', 'olive', 'orange', 'orchid', 'peru', 'pink', 'plum', 'purple', 'red', 'salmon', 'sienna', 'silver', 'snow', 'tan', 'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'white', 'yellow'];\r\nvar grammar = \"#JSGF V1.0; \"+\r\n\"grammar coords; \"+\r\n\"public <letterweights> = /150/ B | /0/ beet | /0/ beat;\"+\r\n\"public <coordletter> = A | B | C | D | E | F | G | H | a | b | c | d | e | f | g | h;\"+\r\n\"public <coordnumber> = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\"+\r\n\"public <coord> = <coordletter> <coordnumber>;\"+\r\n\"public <coords> = A1 | B1 | C1 | D1 | E1 | F1 | G1 | H1 | A2 | B2 | C2 | D2 | E2 | F2 | G2 | H2 | A3 | B3 | C3 | D3 | E3 | F3 | G3 | H3 | A4 | B4 | C4 | D4 | E4 | F4 | G4 | H4 | A5 | B5 | C5 | D5 | E5 | F5 | G5 | H5 | A6 | B6 | C6 | D6 | E6 | F6 | G6 | H6 | A7 | B7 | C7 | D7 | E7 | F7 | G7 | H7 | A8 | B8 | C8 | D8 | E8 | F8 | G8 | H8 | <coord>;\"+\r\n\"public <move> = <coords> <coords>;\"+\r\n\"public <beerule> = /80/ B8 | /0/ V8;\"\r\n\r\nclass VoiceCommandsListener {\r\n    constructor() {\r\n        this.recently_received_command = null;\r\n        this.interpreters_list = [];\r\n        this.recognition = new SpeechRecognition();\r\n        this.speechRecognitionList = new SpeechGrammarList();\r\n        this.speechRecognitionList.addFromString(grammar, 1);\r\n        this.recognition.grammars = this.speechRecognitionList;\r\n        this.recognition.continuous = true;\r\n        this.recognition.lang = 'en-US';\r\n        this.recognition.interimResults = true;\r\n        this.recognition.maxAlternatives = 5;\r\n        this.last_command = \"\";\r\n        this.command_found = false;\r\n        this.current_command = \"\";\r\n        this.candidate_word = \"\";\r\n        this.current_confidence = 0;\r\n        this.is_listening = true;\r\n        this.recognition.onresult = this.process_result.bind(this);\r\n        this.recognition.onspeechend = function () {\r\n            // this.recognition.stop();\r\n            // this.recognition.start();\r\n        };\r\n\r\n        this.recognition.onend = function (event) {\r\n            this.on_end();\r\n            // this.start(); \r\n        }.bind(this);\r\n        this.recognition.onstart = function (event) {\r\n            this.on_start();\r\n        }.bind(this);\r\n\r\n        this.recognition.onnomatch = function (event) {\r\n            // alert('no match found');\r\n            this.start();\r\n        }.bind(this);\r\n\r\n        this.recognition.onerror = function (event) {\r\n            // event.preventDefault();\r\n            // alert('recognition error');\r\n        };\r\n\r\n    }\r\n    on_result(result){}\r\n    on_end() { }\r\n    on_start() { }\r\n    on_read_success() { }\r\n    on_read_failure() { }\r\n    on_received_command(command) { }\r\n\r\n    delay_same_command(command){\r\n        this.recently_received_command = command;\r\n        setTimeout(() => {\r\n            this.recently_received_command = null;\r\n        }, 5000);\r\n    }\r\n\r\n    add_interpreter(interpreter) {\r\n        this.interpreters_list.push(interpreter);\r\n    }\r\n\r\n    stop_listening() {\r\n        // this.is_listening = false;\r\n        this.recognition.stop();\r\n    }\r\n\r\n    listen() {\r\n        // this.is_listening = true;\r\n        try {\r\n            this.recognition.start();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    start() {\r\n        try {\r\n            // this.recognition.stop();\r\n            this.recognition.start();\r\n        } catch (error) {\r\n            // alert('already started');\r\n        }\r\n    }\r\n\r\n    process_result(evt) {\r\n        if (!this.is_listening) {\r\n            evt.preventDefault();\r\n            console.log('not listening');\r\n            return;\r\n        }\r\n        // var word = event.results[0][0].transcript;\r\n        console.log('on result');\r\n        const results_object = evt.results[evt.results.length - 1];\r\n        const alternatives = Array.from(results_object);\r\n\r\n        for (let i = 0; i < alternatives.length; i++) {\r\n            const result = alternatives[i];\r\n            const recognized_uninterpreted = result.transcript;\r\n            this.on_result(recognized_uninterpreted);\r\n            for (let j = 0; j < this.interpreters_list.length; j++) {\r\n                const interpreter = this.interpreters_list[j];\r\n                let interpreted_result = interpreter.interpret(recognized_uninterpreted);\r\n                if (interpreted_result !== null) {\r\n                    console.log(\"interpreted_result:\",interpreted_result);\r\n                    if(interpreted_result != this.recently_received_command){\r\n                        this.delay_same_command(interpreted_result);               \r\n                        this.on_received_command(interpreted_result);\r\n                        this.read_success();\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.read_failure();\r\n    }\r\n\r\n    read_success() {\r\n        if (this.is_listening) this.on_read_success();\r\n    }\r\n\r\n    read_failure() {\r\n        if (this.is_listening) this.on_read_failure();\r\n    }\r\n}\r\nexport default VoiceCommandsListener;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Chess from \"chess.js\";\r\n\r\n\r\nconst word_candidates_object = {\r\n    'menu': ['men u', 'man u', 'men you', 'man you'],\r\n    'back': ['backs'],\r\n    'help': ['help','whelp','helped','hell','helps','hep','health','hil'],\r\n    'yes': ['just', 'yeast','jazz'],\r\n    'no': [],\r\n    'new': [],\r\n    'game': [],\r\n    'repeat': [],\r\n    'difficulty': [],\r\n    '1': [\"one\"],\r\n    '2': [\"too\", \"to\", \"two\"],\r\n    '3': [\"tree\", \"three\"],\r\n    '4': [\"for\", \"forth\", 'four', 'pork'],\r\n    '5': [\"five\", 'fight'],\r\n    'show': ['shows','cho','chau'],\r\n    'board': ['bored','bord','boards','bard'],\r\n    'black': ['Blanc'],\r\n    'white': ['wight','Whyte','wide'],\r\n}\r\n\r\nconst transform_words_object = {\r\n    'board':'show board',\r\n    'show':'show board',\r\n    'game':'new game',\r\n}\r\n\r\n\r\nclass UICommandsInterpreter {\r\n\r\n    constructor(game = null) {\r\n\r\n\r\n        this.allowed_commands = [\r\n            'no',\r\n            'yes',\r\n            'show board',\r\n            'difficulty 1',\r\n            'difficulty 2',\r\n            'difficulty 3',\r\n            'difficulty 4',\r\n            'difficulty 5',\r\n            'show board',\r\n            'new game',\r\n            'repeat',\r\n            'black',\r\n            'back',\r\n            'white',\r\n            'help',\r\n        ];\r\n\r\n        this.game = new Chess();\r\n        if (game) {\r\n            this.game = game;\r\n        }\r\n    }\r\n\r\n    transform_words(str_val){\r\n        let final_str = str_val;\r\n        let arr = final_str.split(\" \");\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const word = arr[i];\r\n            if(transform_words_object[word]!=null){\r\n                return transform_words_object[word];\r\n            }\r\n        }\r\n        return final_str;\r\n    }\r\n\r\n\r\n    interpret(str_val) {\r\n        let final_str = str_val.toLowerCase();\r\n        // console.log('possible_command after toLowerCase:', final_str);\r\n        final_str = this.get_rid_of_signs(final_str);\r\n        // console.log('possible_command after get_rid_of_signs:', final_str);\r\n        final_str = this.replace_words(final_str);\r\n        // console.log('possible_command after replace_words:', final_str);\r\n        final_str = this.remove_remaining(final_str);\r\n        final_str = this.transform_words(final_str);\r\n        if (this.allowed_commands.includes(final_str)){\r\n            return final_str;\r\n        }\r\n\r\n        return null;\r\n            // console.log('possible_command after remove_remaining:', final_str);\r\n    }\r\n\r\n    get_rid_of_signs(str_val) {\r\n        const signs = ['-', '.', ',', '?', ';', ':'];\r\n        let final_str = str_val;\r\n        for (let i = 0; i < signs.length; i++) {\r\n            const sign = signs[i];\r\n            final_str = final_str.split(sign).join(\"\");\r\n        }\r\n        return final_str;\r\n    }\r\n\r\n    replace_all(str_val, search, replace_val) {\r\n        const alias_regexp = new RegExp('\\\\b' + search + '\\\\b', 'g')\r\n        return str_val.replace(alias_regexp, replace_val);\r\n    }\r\n\r\n    replace_words(str_val) {\r\n        let new_str = str_val;\r\n        const dict = word_candidates_object;\r\n        const keys = Object.keys(dict);\r\n        keys.forEach(key => {\r\n            const alias_array = dict[key];\r\n            alias_array.forEach(alias => {\r\n                new_str = this.replace_all(new_str, alias, key);\r\n            });\r\n        });\r\n        return new_str;\r\n    }\r\n\r\n    remove_remaining(str_val) {\r\n        const allowed_words = [\r\n            ...Object.keys(word_candidates_object),\r\n            ...this.allowed_commands\r\n        ]\r\n        let final_words_arr = [];\r\n        const words_arr = str_val.split(\" \");\r\n        words_arr.forEach(word => {\r\n            if (allowed_words.includes(word)) {\r\n                final_words_arr.push(word);\r\n            }\r\n        });\r\n        return final_words_arr.join(\" \");\r\n    }\r\n}\r\n\r\nexport default UICommandsInterpreter;","import Chess from \"chess.js\";\r\n\r\nconst coord_letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\nconst coord_numbers = ['1', '2', '3', '4', '5', '6', '7', '8'];\r\n\r\nlet allowed_squares = [];\r\n\r\ncoord_letters.forEach(letter => {\r\n    coord_numbers.forEach(number => {\r\n        allowed_squares.push(letter + number);\r\n    });\r\n});\r\n\r\nconst number_candidates_object = {\r\n    '1': [\"one\"],\r\n    '2': [\"too\", \"to\", \"two\"],\r\n    '3': [\"tree\", \"three\",'trip'],\r\n    '4': [\"for\", \"forth\", 'four', 'pork'],\r\n    '5': [\"five\", 'fight'],\r\n    '6': [\"six\", \"sex\"],\r\n    '7': [\"seven\", \"heaven\"],\r\n    '8': [\"eight\", \"ate\", \"aid\", 'j'],\r\n}\r\n\r\nconst letter_candidates_object = {\r\n    'a': [],\r\n    'b': ['bee', 'be', 'beat'],\r\n    'c': ['see', 'sea', 'cee', 'ce'],\r\n    'd': ['dee', 'de', 'the', 'thee','deep'],\r\n    'e': ['he', 'in', 'eat', 'heat', 'it'],\r\n    'f': ['if', 'ef', 'of', 'off'],\r\n    'g': ['ge', 'gee'],\r\n    'h': ['age'],\r\n}\r\n\r\nconst word_candidates_object = {\r\n    'O-O': ['castle king', 'castle king side'],\r\n    'O-O-O': ['castle queen', 'castle queen side'],\r\n    'K': ['king', 'keen','Qing','kin','Ken','kings'],\r\n    'Q': ['queen','queens'],\r\n    'R': ['rock', 'broad', 'brought','rocks','rook', 'rooks', 'root','rooke'],\r\n    'B': ['bishop','push up','bishops'],\r\n    'N': ['knight', 'nite', 'night', 'might', 'nice', 'nike','knights','nights'],\r\n    'x': ['takes', 'taste', 'thanks', 'text', 'take'],\r\n}\r\n\r\nconst go_candidates_object = {\r\n    'go': ['goat','gold','goal','no'],\r\n}\r\n\r\nconst final_replacements_object = {\r\n    'a1': ['81', '8 1'],\r\n    'a2': ['82', '8 2'],\r\n    'a3': ['83', '8 3'],\r\n    'a4': ['84', '8 4'],\r\n    'a5': ['85', '8 5'],\r\n    'a6': ['86', '8 6', 'asics'],\r\n    'a7': ['87', '8 7'],\r\n    'a8': ['aa', '88'],\r\n    'b4': ['before'],\r\n    'e4': ['fo'],\r\n    'e8': ['yet'],\r\n    'x e': ['tracy', 'tasty'],\r\n    'R x': ['rockface'],\r\n    'R e': ['rocky'],\r\n    'ax': ['a x'],\r\n    'bx': ['b x'],\r\n    'cx': ['c x'],\r\n    'dx': ['d x'],\r\n    'ex': ['e x'],\r\n    'fx': ['f x'],\r\n    'gx': ['g x'],\r\n    'hx': ['h x'],\r\n}\r\n\r\nconst homophones = [\r\n    ['xe', 'xc'],\r\n]\r\n\r\nclass MoveInterpreter {\r\n    constructor(game = null) {\r\n        this.cached_piece = null;\r\n        this.cached_first_square = null;\r\n        this.cached_destination = null;\r\n        this.cached_takes = null;\r\n        this.cached_castle = null;\r\n        this.timeout_id = null;\r\n        this.second_square_allowed = false;\r\n        this.accepted_move = null;\r\n        this.can_clean_cache = true;\r\n        this.possible_squares = [];\r\n        this.game = new Chess();\r\n    }\r\n\r\n    on_recognition_change(str) { }\r\n\r\n    recognition_change() {\r\n        const castle_str = this.cached_castle ? this.cached_castle : \"\";\r\n        const piece_str = this.cached_piece ? this.cached_piece : \"\";\r\n        const takes_str = this.cached_takes ? this.cached_takes : \"\";\r\n        const first_square_str = this.cached_first_square ? this.cached_first_square : \"\";\r\n        const destination_str = this.cached_destination ? this.cached_destination : \"\";\r\n        const str_val = castle_str + piece_str+ first_square_str+ takes_str+ destination_str;\r\n        this.on_recognition_change(str_val);\r\n    }\r\n\r\n\r\n    start_cleaning_timeout_counter() {\r\n        if (this.timeout_id != null) {\r\n            clearTimeout(this.timeout_id);\r\n        }\r\n        this.timeout_id = setTimeout(() => {\r\n            this.clean_move_cache();\r\n        }, 5000);\r\n    }\r\n\r\n    clean_move_cache() {\r\n        if (this.can_clean_cache) {\r\n            console.log('move cache cleaned');\r\n            this.on_recognition_change('---');\r\n            this.can_clean_cache = false;\r\n            this.cached_piece = null;\r\n            this.cached_first_square = null;\r\n            this.cached_destination = null;\r\n            this.cached_takes = null;\r\n            this.cached_castle = null;\r\n            this.second_square_allowed = false;\r\n            this.accepted_move = null;\r\n            this.possible_squares = [];\r\n            setTimeout(() => {\r\n                this.can_clean_cache = true;\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    recognize_takes(final_str) {\r\n            if (final_str.includes('x')) {\r\n                this.cached_takes = 'x';\r\n            }\r\n    }\r\n\r\n    recognize_castle(final_str) {\r\n        if (final_str.includes('O-O-O')) {\r\n            this.cached_castle = 'O-O-O';\r\n            return true;\r\n        } else if (final_str.includes('O-O')) {\r\n            this.cached_castle = 'O-O';\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    recognize_piece(final_str) {\r\n        // if (this.cached_piece !== null) return;\r\n        const allowed_pieces = ['K', 'Q', 'R', 'B', 'N'];\r\n        const piece_letters = final_str.split(\"\");\r\n\r\n        for (let i = 0; i < piece_letters.length; i++) {\r\n            const letter = piece_letters[i];\r\n            if (allowed_pieces.includes(letter)) {\r\n                this.cached_piece = letter;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    recognize_squares(final_str) {\r\n        if (this.cached_destination !== null) return;\r\n        // console.log('recognizing squares for ' + final_str);\r\n        let allowed_squares_for_recognition = [...coord_letters, ...allowed_squares];\r\n        if (this.cached_first_square === null) {\r\n            for (let i = 0; i < allowed_squares_for_recognition.length; i++) {\r\n                const square = allowed_squares_for_recognition[i];\r\n                if (final_str.includes(square)) {\r\n                    if (!this.possible_squares.includes(square)) {\r\n                        this.possible_squares.push(square);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_recognition_state() {\r\n        const piece_str = this.cached_piece ? this.cached_piece : \"\";\r\n        const takes_str = this.cached_takes ? this.cached_takes : \"\";\r\n        return piece_str+takes_str;\r\n        // return JSON.stringify([\r\n        //     this.cached_castle,\r\n        //     this.cached_destination,\r\n        //     this.cached_first_square,\r\n        //     this.cached_piece,\r\n        //     this.cached_takes,\r\n        // ]);\r\n    }\r\n\r\n\r\n    recognize_features(final_str) {\r\n        const state_before = this.get_recognition_state();\r\n        if (this.recognize_castle(final_str)) {\r\n            return;\r\n        }\r\n        this.recognize_piece(final_str);\r\n        this.recognize_squares(final_str);\r\n        this.recognize_takes(final_str);\r\n        const state_after = this.get_recognition_state();\r\n        // console.log('comparing ' + state_before + ' with ' + state_after);\r\n\r\n        if (state_before !== state_after) {\r\n            this.recognition_change();\r\n        }\r\n    }\r\n\r\n    create_move(piece, first_square, takes, destination) {\r\n        if (!destination) {\r\n            return null;\r\n        }\r\n        let piece_str = piece ? piece : \"\";\r\n        let first_square_str = first_square ? first_square : \"\";\r\n        let takes_str = takes ? takes : \"\";\r\n        let destination_str = destination ? destination : \"\";\r\n        return piece_str + first_square_str + takes_str + destination_str;\r\n    }\r\n\r\n    get_homophone_options(move) {\r\n        let options = [];\r\n        let options_found = false;\r\n        for (let i = 0; i < homophones.length; i++) {\r\n            const homophones_list = homophones[i];\r\n            for (let j = 0; j < homophones_list.length; j++) {\r\n                const word = homophones_list[j];\r\n                if (move.includes(word)) {\r\n                    for (let k = 0; k < homophones_list.length; k++) {\r\n                        const replacement_candidate = homophones_list[k];\r\n                        options.push(move.split(word).join(replacement_candidate));\r\n                        options_found = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options_found) {\r\n            return options;\r\n        }\r\n        return [move];\r\n    }\r\n\r\n    get_legal_homophone(move_option) {\r\n        console.log('received option for homophones:', move_option);\r\n        let homophones = this.get_homophone_options(move_option);\r\n        for (let i = 0; i < homophones.length; i++) {\r\n            const option = homophones[i];\r\n            if (this.is_legal_move(option)) {\r\n                return option;\r\n            } else {\r\n                console.log(option, 'not legal');\r\n\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get_legal_move() {\r\n        // console.log('possible sqars:', this.possible_squares);\r\n\r\n        if (this.cached_castle) {\r\n            if(this.is_legal_move(this.cached_castle))\r\n            return this.cached_castle;\r\n        }\r\n\r\n        let two_letter_squares = this.possible_squares.filter(square => (square.length === 2));\r\n        // console.log('two letter sqares:', two_letter_squares);\r\n        //try for only destination square\r\n        for (let i = 0; i < two_letter_squares.length; i++) {\r\n            const square = two_letter_squares[i];\r\n            let preliminar_option = this.create_move(this.cached_piece, null, this.cached_takes, square);\r\n            let final_option = this.get_legal_homophone(preliminar_option);\r\n            if (final_option !== null) return final_option;\r\n        }\r\n\r\n        let only_letter_squares = this.possible_squares.filter(square => (square.length === 1));\r\n        // console.log('only letter sqares:', only_letter_squares);\r\n        //try for only letter source, two letter destination\r\n        for (let i = 0; i < only_letter_squares.length; i++) {\r\n            const source_square = only_letter_squares[i];\r\n            for (let j = 0; j < two_letter_squares.length; j++) {\r\n                const destination = two_letter_squares[j];\r\n                let preliminar_option = this.create_move(this.cached_piece, source_square, this.cached_takes, destination);\r\n                let final_option = this.get_legal_homophone(preliminar_option);\r\n                if (final_option !== null) return final_option;\r\n            }\r\n        }\r\n\r\n        //try for two letter source, two letter destination\r\n        for (let i = 0; i < two_letter_squares.length; i++) {\r\n            const source_square = two_letter_squares[i];\r\n            for (let j = 0; j < two_letter_squares.length; j++) {\r\n                const destination = two_letter_squares[j];\r\n                if (source_square !== destination) {\r\n                    let preliminar_option = this.create_move(this.cached_piece, source_square, this.cached_takes, destination);\r\n                    let final_option = this.get_legal_homophone(preliminar_option);\r\n                    if (final_option !== null) return final_option;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n\r\n    }\r\n\r\n    set_game_position(fen_position) {\r\n        if (fen_position) {\r\n            this.game.load(fen_position);\r\n        }\r\n    }\r\n\r\n    is_legal_move(move) {\r\n        const move_result = this.game.move(move);\r\n        if (move_result !== null) {\r\n            this.game.undo();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    detect_go(str_val) {\r\n        let final_str = str_val;\r\n        final_str = this.replace_go(final_str);\r\n        if (final_str.includes('go')) {\r\n            // console.log('go detected');\r\n\r\n            this.clean_move_cache();\r\n            final_str = final_str.replace('go', '');\r\n        }\r\n        return final_str\r\n    }\r\n\r\n    interpret(str_val) {\r\n        let final_str = str_val.toLowerCase();\r\n        // console.log('possible_move_string after toLowerCase:', final_str);\r\n        final_str = this.detect_go(final_str);\r\n        final_str = this.get_rid_of_signs(final_str);\r\n        // console.log('possible_move_string after get_rid_of_signs:', final_str);\r\n        final_str = this.separate_numbers(final_str);\r\n        // console.log('possible_move_string after separate_numbers:', final_str);\r\n        final_str = \" \" + final_str + \" \";\r\n        // console.log('possible_move_string after add spaces:', final_str);\r\n        final_str = this.replace_words(final_str);\r\n        // console.log('possible_move_string after replace_words:', final_str);\r\n        final_str = this.replace_numbers(final_str);\r\n        // console.log('possible_move_string after replace_numbers:', final_str);\r\n        final_str = this.replace_letters(final_str);\r\n        // console.log('possible_move_string after replace_letters:', final_str);\r\n        final_str = this.replace_general(final_str);\r\n        // console.log('possible_move_string after replace_general:', final_str);\r\n        final_str = this.remove_remaining(final_str);\r\n        // console.log('possible_move_string after remove_remaining:', final_str);\r\n        final_str = this.remove_spaces(final_str);\r\n        // console.log('possible_move_string after remove_spaces:', final_str);\r\n        final_str = this.replace_general(final_str);\r\n        console.log('possible_move:', final_str);\r\n        this.recognize_features(final_str);\r\n        this.start_cleaning_timeout_counter();\r\n        final_str = this.get_legal_move(final_str);\r\n        if (final_str !== null) {\r\n            if (this.accepted_move === final_str) {\r\n                return null;\r\n            }else{\r\n                this.accepted_move = final_str;\r\n            }\r\n            this.on_recognition_change(final_str);\r\n            final_str = 'move:' + final_str;\r\n            console.log(final_str);\r\n\r\n        }\r\n        return final_str\r\n    }\r\n\r\n    get_rid_of_signs(str_val) {\r\n        const signs = ['-', '.', ',', '?', ';', ':'];\r\n        let final_str = str_val;\r\n        for (let i = 0; i < signs.length; i++) {\r\n            const sign = signs[i];\r\n            final_str = final_str.split(sign).join(\"\");\r\n        }\r\n        return final_str;\r\n    }\r\n\r\n    replace_all(str_val, search, replace_val) {\r\n        const alias_regexp = new RegExp('\\\\b' + search + '\\\\b', 'g')\r\n        return str_val.replace(alias_regexp, replace_val);\r\n    }\r\n\r\n    replace_words(str_val) {\r\n        let new_str = str_val;\r\n        const dict = word_candidates_object;\r\n        const keys = Object.keys(dict);\r\n        keys.forEach(key => {\r\n            const alias_array = dict[key];\r\n            alias_array.forEach(alias => {\r\n                new_str = this.replace_all(new_str, alias, key);\r\n            });\r\n        });\r\n        return new_str;\r\n    }\r\n\r\n    replace_general(str_val) {\r\n        let new_str = str_val;\r\n        const dict = final_replacements_object;\r\n        const keys = Object.keys(dict);\r\n        keys.forEach(key => {\r\n            const alias_array = dict[key];\r\n            alias_array.forEach(alias => {\r\n                new_str = new_str.split(alias).join(key);\r\n            });\r\n        });\r\n        return new_str;\r\n    }\r\n\r\n    separate_numbers(str_val) {\r\n        let final_str = str_val;\r\n        final_str = final_str.split(\"1\").join(\" 1\");\r\n        final_str = final_str.split(\"2\").join(\" 2\");\r\n        final_str = final_str.split(\"3\").join(\" 3\");\r\n        final_str = final_str.split(\"4\").join(\" 4\");\r\n        final_str = final_str.split(\"5\").join(\" 5\");\r\n        final_str = final_str.split(\"6\").join(\" 6\");\r\n        final_str = final_str.split(\"7\").join(\" 7\");\r\n        final_str = final_str.split(\"8\").join(\" 8\");\r\n        return final_str;\r\n    }\r\n\r\n    replace_numbers(str_val) {\r\n        let new_str = str_val;\r\n        const dict = number_candidates_object;\r\n        const keys = Object.keys(dict);\r\n        keys.forEach(key => {\r\n            const alias_array = dict[key];\r\n            alias_array.forEach(alias => {\r\n                new_str = this.replace_all(new_str, alias, key);\r\n            });\r\n        });\r\n        return new_str;\r\n    }\r\n\r\n    replace_letters(str_val) {\r\n        let new_str = str_val;\r\n        const dict = letter_candidates_object;\r\n        const keys = Object.keys(dict);\r\n        keys.forEach(key => {\r\n            const alias_array = dict[key];\r\n            alias_array.forEach(alias => {\r\n                new_str = this.replace_all(new_str, alias, key);\r\n            });\r\n        });\r\n        return new_str;\r\n    }\r\n    replace_go(str_val) {\r\n        let new_str = str_val;\r\n        const dict = go_candidates_object;\r\n        const keys = Object.keys(dict);\r\n        keys.forEach(key => {\r\n            const alias_array = dict[key];\r\n            alias_array.forEach(alias => {\r\n                new_str = this.replace_all(new_str, alias, key);\r\n            });\r\n        });\r\n        return new_str;\r\n    }\r\n\r\n    is_coordinate(word) {\r\n        if (word.length === 2) {\r\n            if (coord_letters.includes(word[0]) && coord_numbers.includes(word[1])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    remove_remaining(str_val) {\r\n        const allowed_words = [\r\n            ...['ax', 'bx', 'cx', 'dx', 'ex', 'fx', 'gx', 'hx',],\r\n            ...Object.keys(letter_candidates_object),\r\n            ...Object.keys(number_candidates_object),\r\n            ...Object.keys(word_candidates_object),\r\n        ]\r\n        let final_words_arr = [];\r\n        const words_arr = str_val.split(\" \");\r\n        words_arr.forEach(word => {\r\n            if (allowed_words.includes(word) || this.is_coordinate(word)) {\r\n                final_words_arr.push(word);\r\n            }\r\n        });\r\n        return final_words_arr.join(\" \");\r\n    }\r\n\r\n    remove_spaces(str_val) {\r\n        return str_val.split(\" \").join(\"\");\r\n    }\r\n}\r\n\r\n\r\n// module.exports = MoveInterpreter;\r\nexport default MoveInterpreter;","\r\n\r\nclass CommandsHandler {\r\n    constructor() {\r\n        this.pending_move = null;\r\n    }\r\n    on_not_recognized_command(command) { }\r\n    on_rejected_move() { }\r\n    on_command_success(command) { }\r\n    on_command_failure(command) { }\r\n    on_move(move_str) { }\r\n    on_move_save(move_str) { }\r\n\r\n    is_move(word) {\r\n\r\n        if (word.includes('move:')) {\r\n            console.log('====================================');\r\n            console.log(word + ' is move');\r\n            console.log('====================================');\r\n            return true;\r\n        }\r\n        //TODO: implement this\r\n        //it needs to recognize the form returned by move interpreter\r\n        return false;\r\n    }\r\n\r\n    get_move(word) {\r\n\r\n        let returned = word;\r\n        let returned_arr = returned.split(\"move:\");\r\n        if (returned_arr.length > 1) {\r\n            return returned_arr[1];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n\r\n    is_move_ready(move_str) {\r\n        if (this.pending_move !== null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    save_pending_move(move_str) {\r\n        this.pending_move = move_str;\r\n        this.on_move_save(move_str);\r\n    }\r\n\r\n    clear_pending_move() {\r\n        this.pending_move = null;\r\n    }\r\n\r\n    execute_command(command) {\r\n        console.log('readed:' + command);\r\n        switch (command) {\r\n            case 'yes':\r\n                if (this.is_move_ready()) {\r\n                    this.on_move(this.pending_move);\r\n                    this.clear_pending_move();\r\n                }\r\n                break;\r\n\r\n            case 'no':\r\n                if (this.is_move_ready()) {\r\n                    console.log('rejected move');\r\n                    this.on_rejected_move();\r\n                }\r\n                break;\r\n\r\n            default:\r\n                // console.log(this);\r\n\r\n                if (this.is_move(command)) {\r\n                    this.save_pending_move(this.get_move(command));\r\n                    break;\r\n                }\r\n                if (command) {\r\n                    //TODO: fix this way of handling commands, its horrible\r\n                    this.on_not_recognized_command(command)\r\n                }\r\n\r\n                this.on_command_failure(command);\r\n                return;\r\n        }\r\n        this.on_command_success(command);\r\n    }\r\n}\r\n\r\nexport default CommandsHandler;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}), React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}), React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, React.createElement(\"g\", null), React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M12,14c1.66,0,3-1.34,3-3V5c0-1.66-1.34-3-3-3S9,3.34,9,5v6C9,12.66,10.34,14,12,14z\"\n}), React.createElement(\"path\", {\n  d: \"M17,11c0,2.76-2.24,5-5,5s-5-2.24-5-5H5c0,3.53,2.61,6.43,6,6.92V21h2v-3.08c3.39-0.49,6-3.39,6-6.92H17z\"\n})));\n\nvar SvgMic = function SvgMic(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMic, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/mic.90f18d92.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Speaker from './speaker';\r\nimport voiceCommandsListener from './voiceCommandsListener';\r\nimport UICommandsInterpreter from './UICommandsInterpreter';\r\nimport MoveInterpreter from './moveInterpreter';\r\nimport CommandsHandler from './commandsHandler';\r\nimport MoveToTextConverter from './moveToTextConverter'\r\nimport try_move from '../../redux/actions/game/try_move';\r\nimport send_command from '../../redux/actions/general/send_command';\r\nimport add_pending_sentence from '../../redux/actions/voice_interface/add_pending_sentence';\r\nimport clear_sentences from '../../redux/actions/voice_interface/clear_pending_sentences';\r\nimport { ReactComponent as MicIcon } from './media/mic.svg';\r\nimport Swal from 'sweetalert2';\r\nimport './styles/style.css';\r\nconst failure_sound = require('./media/failure.mp3');\r\nconst success_sound = require('./media/success.wav');\r\nclass VoiceInterface extends Component {\r\n    state = {}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.wait_before_moving_again = false;\r\n        this.can_speak = false;\r\n        this.can_listen = false;\r\n        this.coord_listener = new voiceCommandsListener();\r\n        this.move_interpreter = new MoveInterpreter();\r\n        this.move_converter = new MoveToTextConverter();\r\n        this.move_interpreter.on_recognition_change = this.on_recognition_change.bind(this);\r\n        this.ui_interpreter = new UICommandsInterpreter();\r\n        this.coord_listener.add_interpreter(this.move_interpreter);\r\n        this.coord_listener.add_interpreter(this.ui_interpreter);\r\n        this.commands_handler = new CommandsHandler();\r\n        this.coord_listener.on_received_command = this.commands_handler.execute_command.bind(this.commands_handler);\r\n        this.speaker = new Speaker();\r\n        this.commands_handler.on_move_save = this.on_move_save.bind(this);\r\n        this.commands_handler.on_move = this.on_move.bind(this);\r\n        this.commands_handler.on_command_success = this.command_success.bind(this);\r\n        this.commands_handler.on_command_failure = this.command_failure.bind(this);\r\n        this.commands_handler.on_rejected_move = this.move_interpreter.clean_move_cache.bind(this.move_interpreter);\r\n        this.commands_handler.on_not_recognized_command = this.on_not_recognized_command.bind(this);\r\n        this.coord_listener.on_result = this.on_result.bind(this);\r\n        this.coord_listener.on_read_success = this.command_success.bind(this);\r\n        this.coord_listener.on_end = () => {\r\n            // document.body.style.background = 'red';\r\n            this.refs.mic_icon.classList.add('inactive');\r\n            this.refs.mic_icon.classList.remove('active');\r\n        };\r\n        this.coord_listener.on_start = () => {\r\n            this.refs.mic_icon.classList.add('active');\r\n            this.refs.mic_icon.classList.remove('inactive');\r\n            // document.body.style.background = 'white';\r\n        };\r\n        this.speaker.on_speak_start = this.stop_listening.bind(this);\r\n        this.speaker.on_speak_end = this.listen.bind(this);\r\n    }\r\n\r\n    add_sentence(sentence) {\r\n        this.props.add_voice_sentence(sentence);\r\n    }\r\n\r\n    on_recognition_change(move_str = \"\") {\r\n        const font_replacements = {\r\n            K: '<span class=\"chessfont\">k</span>',\r\n            N: '<span class=\"chessfont\">n</span>',\r\n            B: '<span class=\"chessfont\">b</span>',\r\n            R: '<span class=\"chessfont\">r</span>',\r\n            Q: '<span class=\"chessfont\">q</span>',\r\n        }\r\n        let new_str = move_str;\r\n        Object.keys(font_replacements).forEach(piece => {\r\n            // console.log('replacing chess font ',piece,' for ',font_replacements[piece]);            \r\n            new_str = new_str.split(piece).join(font_replacements[piece]);\r\n        });\r\n        console.log('resutl for chess font: ', new_str);\r\n\r\n        this.refs.move.innerHTML = new_str;\r\n    }\r\n\r\n    on_result(sentence) {\r\n        // console.log('====================================');\r\n        // console.log(this);\r\n        // console.log('====================================');\r\n        // this.refs.output.innerHTML = sentence;\r\n    }\r\n\r\n\r\n    // on_move_save_old(move_str) {\r\n    //     const piece = this.move_converter.get_piece(move_str);\r\n    //     const destination = this.move_converter.get_destination(move_str);\r\n    //     const first_square = this.move_converter.get_first_square(move_str);\r\n    //     const takes = this.move_converter.get_takes(move_str);\r\n    //     const your = takes !== \"\" ? \" \" : \" your \";\r\n    //     const to = takes !== \"\" ? \" takes \" : \" to \";\r\n    //     this.add_sentence('do you want to move ' +\r\n    //         your +\r\n    //         piece + ' ' +\r\n    //         first_square +\r\n    //         to +\r\n    //         destination + '?');\r\n    // }\r\n\r\n    on_move_save(move_str) {\r\n        if(this.wait_before_moving_again){\r\n            console.log('waiting before moving again');            \r\n            return;\r\n        }\r\n        console.log('moving '+move_str);            \r\n        const piece = this.move_converter.get_piece(move_str);\r\n        const destination = this.move_converter.get_destination(move_str);\r\n        const first_square = this.move_converter.get_first_square(move_str);\r\n        const takes = this.move_converter.get_takes(move_str);\r\n        const your = takes !== \"\" ? \" \" : \" your \";\r\n        const to = takes !== \"\" ? \" takes \" : \" to \";\r\n        this.add_sentence('you moved ' +\r\n            your +\r\n            piece + ' ' +\r\n            first_square +\r\n            to +\r\n            destination);\r\n        this.props.move(move_str);\r\n        this.wait_before_moving_again = true;\r\n        setTimeout(\r\n            function(){\r\n                console.log('waiting set to false');                \r\n                this.wait_before_moving_again = false;\r\n            }.bind(this),\r\n            3000\r\n        )\r\n    }\r\n\r\n    on_move(move_str) {\r\n        this.props.move(move_str);\r\n        this.add_sentence('done');\r\n    }\r\n\r\n    stop_listening() {\r\n        console.log(\"stopped listening\");\r\n        this.coord_listener.stop_listening();\r\n        // document.getElementById('ear-icon').style.display = \"none\";\r\n    }\r\n\r\n\r\n    listen() {\r\n        if (this.can_listen) {\r\n            console.log(\"started listening\");\r\n            this.coord_listener.listen();\r\n        }\r\n        // setTimeout(() => {\r\n        //     this.coord_listener.listen();\r\n        // }, 3000);\r\n        // document.getElementById('ear-icon').style.display = \"block\";\r\n    }\r\n\r\n    command_success() {\r\n        try {\r\n            document.getElementById('success-audio').play();\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    on_not_recognized_command(command) {\r\n        this.props.send_command(command);\r\n    }\r\n    command_failure(command) {\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.onclick = function () {\r\n            if (this.can_listen) {\r\n                this.coord_listener.start();\r\n            }\r\n            this.can_speak = true;\r\n            // this.can_listen = true;\r\n        }.bind(this);\r\n        document.addEventListener('keypress', event => {\r\n            if (event.code === 'Space') {\r\n                if (this.can_listen) {\r\n                    this.coord_listener.start();\r\n                }\r\n                this.can_speak = true;\r\n            }\r\n        });\r\n        document.getElementById('commands-trigger').addEventListener('click', function (ev) {\r\n            ev.stopPropagation();\r\n            Swal.fire('Commands',\r\n                \"<div>show board: toggle board visibility</div>\" +\r\n                \"<div>new game: start a new game</div>\" +\r\n                \"<div>repeat: repeat last move</div>\" +\r\n                \"<div>help: hear instructions</div>\" +\r\n                \"<div></div>\"\r\n            );\r\n            document.getElementsByClassName(\"swal2-container\")[0].addEventListener('click', function (ev) {\r\n                ev.stopPropagation();\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    set_chess_engine(chess_instance) {\r\n        this.move_interpreter.replace_game_handler(chess_instance);\r\n    }\r\n\r\n    check_pending_sentences() {\r\n        if (!this.speaker.is_ispeaking && this.can_speak) {\r\n            this.speak_pending_sentences();\r\n        } else {\r\n            setTimeout(() => {\r\n                this.check_pending_sentences();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log('voice interface updated');\r\n        this.check_pending_sentences();\r\n        this.move_interpreter.set_game_position(this.props.fen_position);\r\n    }\r\n\r\n    sentences_spoken() {\r\n        this.speak_pending_sentences();\r\n    }\r\n\r\n    async speak_pending_sentences() {\r\n        // console.log('speaking pending sentences:', this.props.pending_sentences);\r\n        this.coord_listener.stop_listening();\r\n        this.can_listen = false;\r\n        if (this.props.pending_sentences.length > 0) {\r\n            const pending_sentences = this.props.pending_sentences;\r\n            this.props.clear_sentences();\r\n            for (let i = 0; i < pending_sentences.length; i++) {\r\n                const sentence = pending_sentences[i];\r\n                await this.speaker.speak(sentence);\r\n            }\r\n            this.sentences_spoken();\r\n        }\r\n        this.can_listen = true;\r\n        // this.coord_listener.listen();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n\r\n            <div id=\"voice-interface\">\r\n                <MicIcon ref=\"mic_icon\" className=\"mic-icon inactive\" />\r\n                <h1 ref=\"move\">\r\n                    ---\r\n                </h1>\r\n                {/* <img id=\"ear-icon\" src={ear_img} alt=\"someimg\" /> */}\r\n                <audio\r\n                    id=\"success-audio\"\r\n                    src={success_sound}>\r\n                    Your browser does not support the\r\n                    <code>audio</code> element.\r\n                </audio>\r\n                <audio\r\n                    id=\"failure-audio\"\r\n                    src={failure_sound}>\r\n                    Your browser does not support the\r\n                    <code>audio</code> element.\r\n                </audio>\r\n                <p className=\"hints\"></p>\r\n                <div>\r\n                    <p className=\"touch message\"><em>touch the screen or press spacebar to talk</em></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        fen_position: state.game.fen_position,\r\n        pending_sentences: state.voice_interface.pending_sentences,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        move: (move_str) => {\r\n            dispatch(try_move(move_str));\r\n        },\r\n        add_voice_sentence: (sentence) => {\r\n            dispatch(add_pending_sentence(sentence));\r\n        },\r\n        clear_sentences: () => {\r\n            dispatch(clear_sentences());\r\n        },\r\n        send_command: (command) => {\r\n            dispatch(send_command(command));\r\n        },\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VoiceInterface);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"heart-icon\",\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n});\n\nvar SvgHeart = function SvgHeart(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgHeart, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/heart.f38f4ea3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ReactComponent as DonateIcon } from './media/heart.svg';\r\nimport Swal from 'sweetalert2';\r\nimport add_pending_sentence from '../../redux/actions/voice_interface/add_pending_sentence';\r\nimport './style.css';\r\nconst finally_audio_url = require('./media/finally.wav');\r\nconst finally_audio = new Audio(finally_audio_url);\r\n\r\n\r\n\r\nclass Donate extends Component {\r\n    state = {\r\n        show: false\r\n    }\r\n\r\n    render_paypal_button(value){\r\n        document.getElementById(\"ppbtn\").innerHTML = \"\";\r\n        window.paypal.Buttons({\r\n            createOrder: function (data, actions) {\r\n                // This function sets up the details of the transaction, including the amount and line item details.\r\n                return actions.order.create({\r\n                    purchase_units: [{\r\n                        amount: {\r\n                            value\r\n                        }\r\n                    }],\r\n                    application_context: {\r\n                        'shipping_preference': 'NO_SHIPPING'\r\n                    }\r\n                });\r\n            },\r\n            onApprove: function (data, actions) {\r\n                // This function captures the funds from the transaction.\r\n                return actions.order.capture().then(function (details) {\r\n                    // This function shows a transaction success message to your buyer.\r\n                    // alert('Transaction completed by ' + details.payer.name.given_name);\r\n                });\r\n            }\r\n        }).render('#ppbtn');\r\n    }\r\n\r\n    clickHandler(event) {\r\n        event.stopPropagation();\r\n        let html_tag = `\r\n        <form class=\"input-group form-group\" autocomplete=\"off\">\r\n            <div class = \"input-group-prepend\">\r\n                <div class=\"input-group-text\">Select amount (USD)</div>\r\n            </div>\r\n            <input pattern=\"[0-9]+\" type=\"number\" value=\"2\" id=\"select-price-input\" min=\"1\" max=\"1000\" step=\"1\" class=\"form-control\" required>\r\n            <input type=\"submit\" value=\"select\" id=\"select-price-btn\" class=\"btn btn-primary\">\r\n        </form>\r\n        <div id=\"ppbtn\"></div>\r\n        `;\r\n\r\n        html_tag = `\r\n        <form class=\"\" autocomplete=\"off\">\r\n            <div class = \"form-group text-left\">\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"price-select\" id=\"price1\" value=2 checked>\r\n                    <label class=\"form-check-label\" for=\"price1\">\r\n                        I liked the project (2 USD)\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"price-select\" id=\"price2\" value=5>\r\n                    <label class=\"form-check-label\" for=\"price2\">\r\n                        I really loved it (5 USD)\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"price-select\" id=\"price3\" value=10>\r\n                    <label class=\"form-check-label\" for=\"price3\">\r\n                        I was really waiting for this (10 USD)\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"price-select\" id=\"price4\" value=30>\r\n                    <label class=\"form-check-label\" for=\"price4\">\r\n                        I'd like to see a future version (30 USD)\r\n                    </label>\r\n                </div>\r\n                <div class=\"form-check input-group\">\r\n                    <div >\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"price-select\" id=\"custom-price\" value=5>\r\n                        <label class=\"form-check-label input-group\" for=\"custom-price\">\r\n                           <div class=\"input-group-prepend form-control input-group-text \">Other</div> \r\n                           <input class=\"form-control\" type=\"number\" id=\"custom-price-input\" value = 5 disabled>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div id=\"ppbtn\"></div>\r\n        `;\r\n        const me = this;\r\n        const BSwal = Swal.mixin({\r\n            customClass: {\r\n              confirmButton: 'btn btn-secondary',\r\n              cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n          })\r\n        BSwal.fire({\r\n            title: \"Support the project\",\r\n            html: html_tag,\r\n            confirmButtonText: \"I can't right now\"\r\n        });\r\n        this.render_paypal_button(document.querySelector('input[name=\"price-select\"]:checked').value);\r\n        document.getElementsByClassName(\"swal2-container\")[0].addEventListener('click', function (ev) {\r\n            ev.stopPropagation();\r\n        });\r\n        let radios = document.getElementsByName('price-select');\r\n        for (let i = 0; i < radios.length; i++) {\r\n            const radio = radios[i];\r\n            radio.addEventListener('change', function(){\r\n                if(this.checked){\r\n                    if(this.id == \"custom-price\"){\r\n                        document.getElementById('custom-price-input').disabled = false;\r\n                        me.render_paypal_button(this.value);\r\n                    }else{\r\n                        me.render_paypal_button(this.value);\r\n                        document.getElementById('custom-price-input').disabled = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        document.getElementById('custom-price-input').addEventListener('input',function(){\r\n            if(!this.value || this.value < 1){\r\n                this.classList.add(\"is-invalid\");\r\n            }else{\r\n                this.classList.remove(\"is-invalid\");\r\n                me.render_paypal_button(this.value);\r\n            }\r\n        });\r\n        // document.getElementById(\"select-price-btn\").addEventListener('click', function (ev) {\r\n        //     ev.preventDefault();\r\n        //     document.getElementById(\"ppbtn\").innerHTML = \"\";\r\n        //     // let input = document.getElementById(\"select-price-input\");\r\n        //     let input = document.querySelector('input[name=\"rate\"]:checked');\r\n        //     if(!input.value || input.value < 1){\r\n        //         input.classList.add(\"is-invalid\");\r\n        //     }else{\r\n        //         input.classList.remove(\"is-invalid\");\r\n        //         me.render_paypal_button(input.value);\r\n        //     }\r\n        // });\r\n        // finally_audio.play();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const me = this;\r\n        document.getElementById('donate-btn').addEventListener('click', function (ev) {\r\n            me.clickHandler(ev);\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const me = this;\r\n        document.getElementById('donate-btn').addEventListener('click', function (ev) {\r\n            me.clickHandler(ev);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"donate-btn\" \r\n                // className=\"btn btn-dark\" \r\n                >\r\n                    Support my work &nbsp;\r\n                    <DonateIcon className=\"donate-icon\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        add_voice_sentence: (sentence) => {\r\n            dispatch(add_pending_sentence(sentence));\r\n        }\r\n    });\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Donate);\r\n","import React, { Component } from 'react';\r\nimport \"./navbar.css\";\r\nimport { connect } from 'react-redux'\r\nimport Donate from '../donate/donate';\r\nimport $ from 'jquery';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass NavBar extends Component {\r\n    state = {};\r\n    componentDidMount() {\r\n\r\n        $(document).ready(function () {\r\n            $(document).click(function (event) {\r\n                var clickover = $(event.target);\r\n                var _opened = $(\".navbar-collapse\").hasClass(\"show\");\r\n                console.log(\"opened:\", _opened);\r\n                console.log(\"has_class:\", clickover.hasClass(\"navbar-toggle\"));\r\n\r\n                if (_opened === true && !clickover.hasClass(\"navbar-toggle\")) {\r\n                    // alert();\r\n                    $(\".navbar-collapse\").removeClass('show');\r\n                }\r\n            });\r\n        });\r\n\r\n        document.getElementById('about-trigger').addEventListener('click',function(event){\r\n            event.stopPropagation();\r\n            Swal.fire('About',\r\n                \"<div>This is a voice controlled chess game for blindfold play practice</div>\" +\r\n                \"<div>Developer contact: eidiazcas@gmail.com</div>\"\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark \">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    <img src=\"/Chess-icon.png\" \r\n                    width=\"30\" \r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\" \r\n                    alt=\"\"/>                    \r\n                    &nbsp; V-CHESS\r\n                    \r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\" aria-controls=\"navbar-collapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbar-collapse\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {/* <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Link</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n                        </li>\r\n                         */}\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"about-trigger\">\r\n                                About\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"commands-trigger\">\r\n                                Voice commands list\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\">\r\n                            <Donate></Donate>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <form className=\"form-inline my-2 my-md-0\">\r\n                    </form>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst map_state_to_props = state => ({\r\n\r\n})\r\n\r\nconst map_dispatch_to_props = dispatch => ({\r\n});\r\n\r\nconst add_maps = connect(map_state_to_props, map_dispatch_to_props);\r\nexport default add_maps(NavBar);","import React, { Component } from 'react';\r\n\r\nclass ErrorCatcher extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // Display fallback UI\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <div style={{padding:\"10%\"}}>\r\n                    <div class=\"alert alert-danger\" role=\"alert\">\r\n                            This browser doesn't support SpeechRecognition API, try it on chrome for PC or Android\r\n                    </div>\r\n                </div>\r\n                )\r\n        }else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorCatcher;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport logo from './logo.svg';\nimport './App.css';\nimport store from './redux/store'\nimport GameHandlerComponent from './components/game_handler/gameHandlerComponent';\nimport VoiceInterface from './components/voice_interface/voiceInterface';\nimport Navbar from './components/navbar/navbar';\nimport Donate from './components/donate/donate';\nimport ErrorCatcher from './components/error_catcher/ErrorCatcher';\nfunction App() {\n\n\n  return (\n    <Provider store={store}>\n\n      <div className=\"App\">\n        <ErrorCatcher>\n          <Navbar></Navbar>\n          <GameHandlerComponent />\n          <VoiceInterface></VoiceInterface>\n          {/* <Donate /> */}\n        </ErrorCatcher>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import App from './components/chess_board/stockfish_board';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}